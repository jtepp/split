.post-cell {
    position: relative;
    padding: 12px 12px 20px 12px;
    border-radius: 10px;
    background-color: var(--light-grey);
    /* width: min-content; */
    width: 320px;
}

.post-cell::before {
    /* time */
    content: attr(time);
    position: absolute;
    bottom: 1px;
    left: 5px;
    font-size: 12px;
    font-weight: 500;
    opacity: 0.4;
    color: var(--black-white);
}

.post-cell::after {
    /* date */
    content: attr(date);
    position: absolute;
    bottom: 1px;
    right: 3px;
    font-size: 12px;
    font-weight: 500;
    opacity: 0.4;
    color: var(--black-white);
}

.single-member-container {
    overflow: hidden;
    transition: all 0.2s ease-out;
}

.single-member-container:not(:last-of-type) {
    width: 25px;
    margin-right: -14px;
}


.single-member {
    display: flex;
    flex-direction: row;
}

img.member-img {
    position: relative;
    width: 25px;
    height: 25px;
    border-radius: 5px;
    box-shadow: 0 0 8px #00000070;
    object-fit: cover;
    transition: transform 0.2s ease-out;
}

.single-member-container:not(:last-of-type) .member-img {
    z-index: 1;
    transform: scale(0.9);
}

.single-member-container:last-of-type .member-img {
    z-index: 2;
}

.vertical-center,
.single-member-container,
.cell-inner-amount,
.cell-inner-left {
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.name-text {
    color: var(--black-white);
    font-weight: 500;
    margin-left: 4px;
}

.cell-inner {
    display: flex;
    flex-direction: row;
}

.cell-inner-right {
    background-color: var(--mid-dark-grey);
    border-radius: 4px;
    padding: 4px;
    overflow-x: scroll;
    flex-grow: 1;
    display: flex;
    flex-direction: row;
    column-gap: 0px;
}

/* hide scroll indicators for .cell-inner-right */
.cell-inner-right::-webkit-scrollbar {
    display: none;
}

/* compacting cells */

.cell-inner-right:hover>.single-member-container {
    width: auto;
    overflow: visible;
    margin-right: 0px;
}


.cell-inner-right:hover>.single-member-container:not(:last-of-type)>.single-member>.member-img {
    transform: scale(1);
}

.cell-inner-right:hover {
    column-gap: 10px;
}



img.sfs.arrow {
    width: 20px;
    margin-inline: 10px;
    height: auto;
    object-fit: cover;
    object-position: center;
}

.cell-inner-amount {
    margin-left: 10px;
    background-color: var(--white-black);
    color: var(--black-white);
    padding-inline: 6px;
    border-radius: 10px;
}

[includeSelf].cell-inner-amount::after {
    content: "";
    position: absolute;
    top: 2px;
    right: 2px;
    width: 15px;
    height: 15px;
    filter: invert(1);
    background-repeat: no-repeat;
    background-size: contain;
    background-image: url("https://github.com/cyanzhong/sf-symbols-online/blob/master/glyphs/person.circle.png?raw=true");
}

.cell-inner-memo {
    margin-top: 18px;
    color: var(--black-white);
    word-wrap: break-word;
    overflow-y: hidden;
    height: 0;
    transition: height 0.2s ease-out;
}

.cell-inner-memo::before {
    content: attr(type) "\A";
    white-space: pre;
    font-weight: 800;
    text-transform: uppercase;
    font-size: 12px;
}

img.sfs.chevron {
    /* chevron down */
    content: "";
    position: absolute;
    transform: translateX(-50%) rotate(0deg);
    left: 50%;
    bottom: 12px;
    width: 20px;
    opacity: 0.8;
    transition: transform 0.2s ease-out;
}

img.sfs,
.sfs-after::after {
    filter: invert(var(--invert-dark));
}

.post-cell:hover img.sfs.chevron {
    transform: translateX(-50%) rotate(180deg);
}

.post-cell:hover .cell-inner-memo {
    height: 60px;
    overflow-y: scroll;
}

.cell-inner-right:not(:hover) [more-tag]::after {
    content: attr(more-tag);
    width: max-content;
    white-space: pre;
}